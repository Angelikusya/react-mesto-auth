{"ast":null,"code":"import _classCallCheck from\"/Users/anzhelika/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/anzhelika/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.baseUrl=options.baseUrl;this.token=options.token;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value://подтягиваем карточки\nfunction getInitialCards(){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:{authorization:this.token}}).then(this._checkResponse);}//подтягиваем имя и работу\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'GET',headers:{authorization:this.token}}).then(this._checkResponse);}//отправляем имя и работу на сервер\n},{key:\"setUserInfo\",value:function setUserInfo(name,about){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'PATCH',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}// отправляем ссылку на новый аватар на сервер\n},{key:\"setUserAvatar\",value:function setUserAvatar(avatar){return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}//отправляем новую карточку на сервер\n},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}// удаляем карточку с сервера\n},{key:\"removeCard\",value:function removeCard(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:this.token}}).then(this._checkResponse);}// добавляем лайк карточке на сервере\n},{key:\"addLike\",value:function addLike(imageId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(imageId,\"/likes\"),{method:'PUT',headers:{authorization:this.token}}).then(this._checkResponse);}// удаляем лайк карточки на сервере\n},{key:\"deleteLike\",value:function deleteLike(imageId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(imageId,\"/likes\"),{method:'DELETE',headers:{authorization:this.token}}).then(this._checkResponse);}}]);return Api;}();// вызов Api\nexport{Api as default};var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-72\",token:\"f0a7d939-ec7a-4869-a9eb-1d96ec39a9dd\"});export{api};","map":{"version":3,"names":["Api","options","_classCallCheck","baseUrl","token","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getInitialCards","fetch","headers","authorization","then","getUserInfo","method","setUserInfo","name","about","body","JSON","stringify","setUserAvatar","avatar","addCard","link","removeCard","cardId","addLike","imageId","deleteLike","default","api"],"sources":["/Users/anzhelika/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["export default class Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.token = options.token;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`)\n    };\n\n    //подтягиваем карточки\n    getInitialCards() {\n        return fetch (`${this.baseUrl}/cards`, {\n            headers: {\n                authorization: this.token    \n            }   \n        })\n        .then(this._checkResponse)\n    } \n\n    //подтягиваем имя и работу\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                authorization: this.token\n            }\n        })\n        .then(this._checkResponse)\n    }\n\n    //отправляем имя и работу на сервер\n    setUserInfo(name, about) {\n        return fetch (`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            })\n        })\n        .then(this._checkResponse)\n    }\n\n    // отправляем ссылку на новый аватар на сервер\n    setUserAvatar(avatar) {\n        return fetch (`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: avatar\n            })\n        })\n    .then(this._checkResponse)\n    }\n\n    //отправляем новую карточку на сервер\n    addCard(name, link) {\n        return fetch (`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        })\n        .then(this._checkResponse) \n    }\n    \n    // удаляем карточку с сервера\n    removeCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this.token\n            }\n        })\n        .then(this._checkResponse);\n    }\n\n    // добавляем лайк карточке на сервере\n    addLike(imageId) {\n        return fetch(`${this.baseUrl}/cards/${imageId}/likes`, {\n            method: 'PUT',\n            headers: {\n                authorization: this.token\n            }\n        })\n        .then(this._checkResponse)\n    }\n\n    // удаляем лайк карточки на сервере\n    deleteLike(imageId) {\n        return fetch(`${this.baseUrl}/cards/${imageId}/likes`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this.token\n            }\n        })\n        .then(this._checkResponse);\n    }\n}\n\n\n// вызов Api\nconst api = new Api ({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-72\",\n    token: \"f0a7d939-ec7a-4869-a9eb-1d96ec39a9dd\"\n  });\n\n  export {api};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}